What happens when you initialize a repository? Why do you need to do it?

Git creates a .git directory to hold the status of the repository and all files. You need to do it to tell git what to keep track of.

How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area contains files that are changed but not yet committed. This is valuable because you can tell which files have been altered but allows you to continue editing before committing changes to the repository.

How can you use the staging area to make sure you have one commit per logical change?

Only add files to the staging area that relate to the one logical change you want to commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches would be helpful in situations where you want to keep a clean copy but also try out several other changes without affecting the main copy.

How do the diagrams help you visualize the branch structure?

Diagrams help you see which commits are parents of other commits, and which commits cannot be reached.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

The result is that you can merge the changes on the branch back in with the master branch, while keeping all the information about the branched checkins.

What are the pros and cons of Git.s automatic merging vs. always doing merges manually?

Automatic merging is faster but more error-prone.
